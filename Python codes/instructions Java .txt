 GeeksforGeeks 
A computer science portal for geeks

Practice GATE CS PlacementsVideos Contribute

Login/Register

Skip to content

MenuAlgo ▼- Analysis of Algorithms- Topicwise ►-- Searching Algorithms-- Sorting Algorithms-- Graph Algorithms-- Bit Algorithms-- Pattern Searching-- Geometric Algorithms-- Mathematical Algorithms-- Randomized Algorithms-- Game Theory- Algorithm Paradigms ►-- Greedy Algorithms-- Dynamic Programming-- Divide and Conquer-- Backtracking-- Branch & Bound- All AlgorithmsDS  ▼

- Array- LinkedList- Stack- Queue- Tree based DS ►-- Binary Tree-- Binary Search Tree-- Heap- Hashing- Graph- Advanced Data Structure- Matrix- Strings- All Data StructuresLanguages ▼- C- C++- Java- Python- SQL- Program OutputInterview  ▼- Company Prep- Top Topics- Practice Company Questions- Interview Experiences- Experienced Interviews- Internship Interviews- Competitive Programming- Design Patterns- Multiple Choice QuizzesStudents  ▼- Campus Ambassador Program- Geek of the Month- Placement Course- Project- Competitive Programming- Testimonials- Geek on the Top- Careers- Internship- School ProgrammingGATE ▼- GATE CS Corner- GATE Notes- Last Minute Notes- Official Papers- Gate 2018 Important Dates and LinksCS Subjects ▼- Operating Systems- DBMS- Computer Networks- Compiler Design- Web Technology- Computer Organization & Architecture- Digital Electronics- Engg. Mathematics- Theory of Computation- Advanced Topics- What’s Difference?Quizzes ▼- Languages ►-- C-- C++-- Java-- Python- CS Subjectwise ►-- Data Structures-- Algorithms-- Operating Systems-- DBMS-- Compiler Design-- Computer Networks-- Theory of Computation-- Computer Organization-- Software Engineering- HTML & XML- Engg. Mathematics- AptitudeGBlogPuzzlesWhat’s New?

▲

File handling in Java using FileWriter and FileReader

3.6

Java FileWriter and FileReader classes are used to write and read data from text files (they are Character Streamclasses). It is recommended not to use the FileInputStream and FileOutputStream classes if you have to read and write any textual information as these are Byte stream classes.

￼
Image Source : http://www3.ntu.edu.sg/home/ehchua/programming/java/j5b_io.html

FileWriter

FileWriter is useful to create a file writing characters into it.

This class inherits from the OutputStream class.The constructors of this class assume that the default character encoding and the default byte-buffer size are acceptable. To specify these values yourself, construct an OutputStreamWriter on a FileOutputStream.FileWriter is meant for writing streams of characters. For writing streams of raw bytes, consider using a FileOutputStream.

Constructors:

FileWriter(File file) – Constructs a FileWriter object given a File object.FileWriter (File file, boolean append) –constructs a FileWriter object given a File object.FileWriter (FileDescriptor fd) – constructs a FileWriter object associated with a file descriptor.FileWriter (String fileName) – constructs a FileWriter object given a file name.FileWriter (String fileName, Boolean append) – Constructs a FileWriter object given a file name with a Boolean indicating whether or not to append the data written.

Methods:

public void write (int c) throws IOException –Writes a single character.public void write (char [] stir) throws IOException –Writes an array of characters.public void write(String str)throws IOException –Writes a string.public void write(String str,int off,int len)throws IOException – Writes a portion of a string. Here off is offset from which to start writing characters and len is number of character to write.

Reading and writing take place character by character, which increases the number of I/O operations and effects performance of the system.BufferedWriter can be used along with FileWriter to improve speed of execution.

Following program depicts how to create a text file using FileWriter

// Creating a text File using FileWriter

import java.io.FileWriter;

import java.io.IOException;

class CreateFile

{

    public static void main(String[] args) throws IOException

    {

        // Accept a string

        String str = "File Handling in Java using "+

                     " FileWriter and FileReader";

 

        // attach a file to FileWriter

        FileWriter fw=new FileWriter("text");

 

        // read character wise from string and write

        // into FileWriter

        for (int i = 0; i < str.length(); i++)

            fw.write(str.charAt(i));

 

        //close the file

        fw.close();

    }

}

Run on IDE

FileReader

FileReader is useful to read data in the form of characters from a ‘text’ file.

This class inherit from the InputStreamReader Class.The constructors of this class assume that the default character encoding and the default byte-buffer size are appropriate. To specify these values yourself, construct an InputStreamReader on a FileInputStream.FileReader is meant for reading streams of characters. For reading streams of raw bytes, consider using a FileInputStream.

Constructors:

FileReader(File file) – Creates a FileReader , given the File to read fromFileReader(FileDescripter fd) – Creates a new FileReader , given the FileDescripter to read fromFileReader(String fileName) – Creates a new FileReader , given the name of the file to read from

Methods:

public int read () throws IOException – Reads a single character. This method will block until a character is available, an I/O error occurs, or the end of the stream is reached.public int read(char[] cbuff) throws IOException – Reads characters into an array. This method will block until some input is available, an I/O error occurs, or the end of the stream is reached.public abstract int read(char[] buff, int off, int len) throws IOException –Reads characters into a portion of an array. This method will block until some input is available, an I/O error occurs, or the end of the stream is reached.
Parameters:
cbuf – Destination buffer
off – Offset at which to start storing characters
len – Maximum number of characters to readpublic long skip(long n) throws IOException –Skips characters. This method will block until some characters are available, an I/O error occurs, or the end of the stream is reached.
Parameters:
n – The number of characters to skip

Following program depicts how to read from the ‘text’ file using FileReader

// Reading data from a file using FileReader

import java.io.FileNotFoundException;

import java.io.FileReader;

import java.io.IOException;

class ReadFile

{

    public static void main(String[] args) throws IOException

    {

        // variable declaration

        int ch;

 

        // check if File exists or not

        FileReader fr=null;

        try

        {

            fr = new FileReader("text");

        }

        catch (FileNotFoundException fe)

        {

            System.out.println("File not found");

        }

 

        // read from FileReader till the end of file

        while ((ch=fr.read())!=-1)

            System.out.print((char)ch);

 

        // close the file

        fr.close();

    }

}

Run on IDE

This article is contributed byNishant Sharma. If you like GeeksforGeeks and would like to contribute, you can also write an article using contribute.geeksforgeeks.org or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks.

Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.

GATE CS Corner    Company Wise Coding Practice

Java

 

Java-I/O

Java-Library

Login to Improve this Article

Please write to us at contribute@geeksforgeeks.org to report any issue with the above content.

Recommended Posts:


Different ways of Reading a text file in JavaCopying file using FileStreams in JavaJava.io.File Class in JavaJava.io.BufferedReader Class in JavaCompressing and Decompressing files in JavaSerialVersionUID in JavaPrint number of words, vowels and frequency of each characterJava program to read all mobile numbers present in given fileProgram to check valid mobile numberWhy Kotlin will replace Java for Android App Development

Post navigation

<< Previous PostNext Post >>

(Login to Rate) 

3.6Average Difficulty : 3.6/5.0
Based on 9 vote(s)

    



 Add to TODO List 
 Mark as DONE





Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here.


Load CommentsShare this post!

Trending ContentLongest Common SubsequenceBreadth First Traversal or BFSSchool ProgrammingLongest Repeated SubsequenceLongest Palindromic SubsequenceDetect a negative cycle in a Graph | (Bellman Ford)0-1 Knapsack ProblemGATE CS NotesDepth First Traversal or DFS for a GraphReverse a linked list

Most Visited PostsTop 10 Algorithms and Data Structures for Competitive ProgrammingTop 10 algorithms in Interview QuestionsHow to begin with Competitive Programming?Step by Step Guide for Placement PreparationHow to prepare for ACM-ICPC?Insertion Sort, Binary Search, QuickSort, MergeSort, HeapSort

Popular CategoriesInterview ExperiencesAdvanced Data StructuresDynamic ProgrammingGreedy AlgorithmsBacktrackingPattern SearchingDivide & ConquerGeometric AlgorithmsSearchingSortingAnalysis of AlgorithmsMathematical AlgorithmsRandomized AlgorithmsRecursionGame TheoryStatistical Algorithms

ads by BSA

Tags

Advanced Data Structure Amazon Aptitude Aptitude Arrays Articles Bit Magic C C C++ C++ Quiz Computer Networks CPP-Library C Quiz Data Structures Data Structures DBMS Dynamic Programming Experienced GBlogGeometric Graph Hash Internship Interview ExperiencesJava Linked Lists MathematicalMatrix Microsoft number-digits Program Output Project Puzzles Python QA - Placement Quizzes QA - Placement Quizzes School ProgrammingSearching series Sorting STL StringsTechnical Scripter Trees
